name: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    name: deploy
    runs-on: ${{ matrix.config.os }} # run on different machines
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows Latest MinGW"
          os: windows-latest
          artifact: "windows.zip"
          to_pack: GeneticAlgorithm.exe Resources/
          build_type: "Release"
          cc: "gcc"
          cxx: "g++"
          archiver: "7z a"
          generators: "Ninja"
          sfml_build: SFML-2.5.1-windows-gcc-7.3.0-mingw-64-bit
        - name: "Linux"
          os: ubuntu-latest
          artifact: "linux.zip"
          to_pack: GeneticAlgorithm Resources/
          build_type: "Release"
          cc: "gcc"
          cxx: "g++"
          archiver: "7z a"
          generators: "Ninja"
        
    steps:
    - uses: actions/checkout@v2
   
    - name: Install dependencies on windows
      if: startsWith(matrix.config.os, 'windows')
      shell: bash
      run: |
        choco install ninja cmake
        curl https://github.com/SFML/SFML/releases/download/2.5.1/${{ matrix.config.sfml_build }}.zip \
          --remote-name --location --remote-header-name --insecure
        7z x ${{ matrix.config.sfml_build }}.zip
        mv SFML-2.5.1 C:\\SFML
        
    - name: Install dependecies on linux
      if: startsWith(matrix.config.os, 'ubuntu')
      run: |
        sudo apt-get install ninja-build libsfml-dev
    
    - name: Configure
      shell: bash
      run: |
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir 
    
    - name: Build
      shell: bash
      run: cmake --build . --config ${{ matrix.config.build_type }}
        
    - name: Pack
      shell: bash
      run: |
        ${{ matrix.config.archiver }} ${{ matrix.config.artifact }} ${{ matrix.config.to_pack }}
        
    - name: Upload
      shell: bash
      run: |
        DROPBOX_TOKEN=$(curl https://api.dropbox.com/oauth2/token \
          -d refresh_token=${{ secrets.DROPBOX_REFRESH_TOKEN }} \
          -d grant_type=refresh_token \
          -d client_id=${{ secrets.DROPBOX_APPKEY }}\
          -d client_secret=${{ secrets.DROPBOX_APPSECRET }} \
          | jq -r ".access_token")
      
        PRETTY_DATE=$(git log -1 --format="%ad" --date=format:"%Y.%m.%d-%T")
        
        curl -X POST https://content.dropboxapi.com/2/files/upload \
          --header "Authorization: Bearer $DROPBOX_TOKEN" \
          --header "Dropbox-API-Arg: {\"path\": \"/builds/$PRETTY_DATE (${{ github.event.head_commit.message }})/${{ matrix.config.artifact }}\"}" \
          --header "Content-Type: application/octet-stream" \
          --data-binary @${{ matrix.config.artifact }}
